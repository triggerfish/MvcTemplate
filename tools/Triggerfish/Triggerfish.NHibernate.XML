<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Triggerfish.NHibernate</name>
    </assembly>
    <members>
        <member name="T:Triggerfish.NHibernate.SessionExtensions">
            <summary>
            Session extension methods
            </summary>
        </member>
        <member name="M:Triggerfish.NHibernate.SessionExtensions.WithinTransaction(NHibernate.ISession,System.Action{NHibernate.ISession})">
            <summary>
            Perform an action within a transaction
            </summary>
            <param name="session">The NHibernate session</param>
            <param name="del">The action delegate instance</param>
        </member>
        <member name="T:Triggerfish.NHibernate.SQLlogger">
            <summary>
            Logs to log4net SQL commands executed by NHibernate
            </summary>
        </member>
        <member name="M:Triggerfish.NHibernate.SQLlogger.Append(log4net.Core.LoggingEvent)">
            <summary>
            Append a logging event to the log
            </summary>
            <param name="loggingEvent">The logging event</param>
        </member>
        <member name="P:Triggerfish.NHibernate.SQLlogger.Log">
            <summary>
            Setter method for the stream to write the SQL commands to
            </summary>
        </member>
        <member name="T:Triggerfish.NHibernate.Ninject.SqliteModule`1">
            <summary>
            Sqlite Ninject dependency module
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Triggerfish.NHibernate.Ninject.DatabaseModule`1">
            <summary>
            NHibernate Ninject dependency module
            </summary>
            <typeparam name="T">A type from the assembly containing FluentNHibernate mappings</typeparam>
        </member>
        <member name="M:Triggerfish.NHibernate.Ninject.DatabaseModule`1.Load">
            <summary>
            Module Load handler
            </summary>
        </member>
        <member name="M:Triggerfish.NHibernate.Ninject.DatabaseModule`1.CreateDatabase">
            <summary>
            Derived classes must implement to provide the specific
            database configuration data
            </summary>
            <returns>Database configuration data</returns>
        </member>
        <member name="M:Triggerfish.NHibernate.Ninject.DatabaseModule`1.SetupBindings">
            <summary>
            Derived classes must implement to perform custom Ninject bindings
            </summary>
        </member>
        <member name="M:Triggerfish.NHibernate.Ninject.SqliteModule`1.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="filename">The name of the SQLite database file</param>
        </member>
        <member name="M:Triggerfish.NHibernate.Ninject.SqliteModule`1.Load">
            <summary>
            Ninject dependency loader
            </summary>
        </member>
        <member name="M:Triggerfish.NHibernate.Ninject.SqliteModule`1.CreateDatabase">
            <summary>
            Returns the FluentNHibernate SQLite configuration data
            </summary>
            <returns>SQLite configuration</returns>
        </member>
        <member name="T:Triggerfish.FluentNHibernate.IDbSession">
            <summary>
            Interface for a database session
            </summary>
        </member>
        <member name="M:Triggerfish.FluentNHibernate.IDbSession.CreateSession">
            <summary>
            Create a new session or return an existing open session
            </summary>
            <returns>A NHibernate session</returns>
        </member>
        <member name="M:Triggerfish.FluentNHibernate.IDbSession.Close">
            <summary>
            Close the session
            </summary>
        </member>
        <member name="T:Triggerfish.FluentNHibernate.Session">
            <summary>
            A FluentNHibernate session implementation
            </summary>
        </member>
        <member name="M:Triggerfish.FluentNHibernate.Session.#ctor(FluentNHibernate.Cfg.FluentConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="config">The FluentNHibernate configuration</param>
        </member>
        <member name="M:Triggerfish.FluentNHibernate.Session.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},FluentNHibernate.PersistenceModel)">
            <summary>
            Constructor
            </summary>
            <param name="properties">A list of configuration properties</param>
            <param name="model">The assembly FluentNHibernate mappings</param>
        </member>
        <member name="M:Triggerfish.FluentNHibernate.Session.CreateSession">
            <summary>
            Create a new session or return an existing open session
            </summary>
            <returns>A NHibernate session</returns>
        </member>
        <member name="M:Triggerfish.FluentNHibernate.Session.Close">
            <summary>
            Close the session
            </summary>
        </member>
        <member name="T:Triggerfish.NHibernate.Ninject.SqlServerModule`1">
            <summary>
            Provides a connection to a SQL Server database
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Triggerfish.NHibernate.Ninject.SqlServerModule`1.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="server">The path to the server</param>
            <param name="database">The name of the database</param>
        </member>
        <member name="M:Triggerfish.NHibernate.Ninject.SqlServerModule`1.CreateDatabase">
            <summary>
            Returns the FluentNHibernate SQL Server configuration data
            </summary>
            <returns>SQL Server configuration</returns>
        </member>
        <member name="T:Triggerfish.NHibernate.Validator.Validator">
            <summary>
            Invokes the NHibernate.Validator validation runner
            </summary>
        </member>
        <member name="M:Triggerfish.NHibernate.Validator.Validator.#ctor(NHibernate.Validator.Engine.ValidatorEngine)">
            <summary>
            Constructor
            </summary>
            <param name="engine">The NHibernate.Validator validation engine</param>
        </member>
        <member name="M:Triggerfish.NHibernate.Validator.Validator.Validate(System.Object)">
            <summary>
            Validate the specified object. Should throw a ValidationException if the 
            object is invalid
            </summary>
            <param name="obj">The object to validate</param>
        </member>
    </members>
</doc>
